/*
 * 污水业务中台领域服务
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DailyAccumulationValue;
import org.threeten.bp.OffsetDateTime;

/**
 * DosingLogOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-09T14:11:26.479568400+08:00[Asia/Shanghai]")
public class DosingLogOutput {
  public static final String SERIALIZED_NAME_COL_NAMES = "colNames";
  @SerializedName(SERIALIZED_NAME_COL_NAMES)
  private List<String> colNames = null;

  public static final String SERIALIZED_NAME_TIMES = "times";
  @SerializedName(SERIALIZED_NAME_TIMES)
  private List<OffsetDateTime> times = null;

  public static final String SERIALIZED_NAME_VALUES = "values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<List<String>> values = null;

  public static final String SERIALIZED_NAME_CAL_VALUE_ACC = "calValueAcc";
  @SerializedName(SERIALIZED_NAME_CAL_VALUE_ACC)
  private DailyAccumulationValue calValueAcc;

  public static final String SERIALIZED_NAME_VALUE_ACC = "valueAcc";
  @SerializedName(SERIALIZED_NAME_VALUE_ACC)
  private DailyAccumulationValue valueAcc;


  public DosingLogOutput colNames(List<String> colNames) {
    
    this.colNames = colNames;
    return this;
  }

  public DosingLogOutput addColNamesItem(String colNamesItem) {
    if (this.colNames == null) {
      this.colNames = new ArrayList<String>();
    }
    this.colNames.add(colNamesItem);
    return this;
  }

   /**
   * 列名 column name
   * @return colNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "列名 column name")

  public List<String> getColNames() {
    return colNames;
  }


  public void setColNames(List<String> colNames) {
    this.colNames = colNames;
  }


  public DosingLogOutput times(List<OffsetDateTime> times) {
    
    this.times = times;
    return this;
  }

  public DosingLogOutput addTimesItem(OffsetDateTime timesItem) {
    if (this.times == null) {
      this.times = new ArrayList<OffsetDateTime>();
    }
    this.times.add(timesItem);
    return this;
  }

   /**
   * 所有时刻 all time steps
   * @return times
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "所有时刻 all time steps")

  public List<OffsetDateTime> getTimes() {
    return times;
  }


  public void setTimes(List<OffsetDateTime> times) {
    this.times = times;
  }


  public DosingLogOutput values(List<List<String>> values) {
    
    this.values = values;
    return this;
  }

  public DosingLogOutput addValuesItem(List<String> valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<List<String>>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * value of each column of each time step
   * @return values
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "value of each column of each time step")

  public List<List<String>> getValues() {
    return values;
  }


  public void setValues(List<List<String>> values) {
    this.values = values;
  }


  public DosingLogOutput calValueAcc(DailyAccumulationValue calValueAcc) {
    
    this.calValueAcc = calValueAcc;
    return this;
  }

   /**
   * Get calValueAcc
   * @return calValueAcc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DailyAccumulationValue getCalValueAcc() {
    return calValueAcc;
  }


  public void setCalValueAcc(DailyAccumulationValue calValueAcc) {
    this.calValueAcc = calValueAcc;
  }


  public DosingLogOutput valueAcc(DailyAccumulationValue valueAcc) {
    
    this.valueAcc = valueAcc;
    return this;
  }

   /**
   * Get valueAcc
   * @return valueAcc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DailyAccumulationValue getValueAcc() {
    return valueAcc;
  }


  public void setValueAcc(DailyAccumulationValue valueAcc) {
    this.valueAcc = valueAcc;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DosingLogOutput dosingLogOutput = (DosingLogOutput) o;
    return Objects.equals(this.colNames, dosingLogOutput.colNames) &&
        Objects.equals(this.times, dosingLogOutput.times) &&
        Objects.equals(this.values, dosingLogOutput.values) &&
        Objects.equals(this.calValueAcc, dosingLogOutput.calValueAcc) &&
        Objects.equals(this.valueAcc, dosingLogOutput.valueAcc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colNames, times, values, calValueAcc, valueAcc);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DosingLogOutput {\n");
    sb.append("    colNames: ").append(toIndentedString(colNames)).append("\n");
    sb.append("    times: ").append(toIndentedString(times)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    calValueAcc: ").append(toIndentedString(calValueAcc)).append("\n");
    sb.append("    valueAcc: ").append(toIndentedString(valueAcc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

