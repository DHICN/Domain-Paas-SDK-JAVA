/*
 * 污水业务中台领域服务
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RealTimeData;

/**
 * RealTimeOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-09T14:11:26.479568400+08:00[Asia/Shanghai]")
public class RealTimeOutput {
  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_INLET = "inlet";
  @SerializedName(SERIALIZED_NAME_INLET)
  private String inlet;

  public static final String SERIALIZED_NAME_INLET_NAME = "inletName";
  @SerializedName(SERIALIZED_NAME_INLET_NAME)
  private String inletName;

  public static final String SERIALIZED_NAME_DATAS = "datas";
  @SerializedName(SERIALIZED_NAME_DATAS)
  private List<RealTimeData> datas = null;


  public RealTimeOutput location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * 毒性仪位置 toxicity meter location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "毒性仪位置 toxicity meter location")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public RealTimeOutput inlet(String inlet) {
    
    this.inlet = inlet;
    return this;
  }

   /**
   * 所处的进水点 inlet
   * @return inlet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "所处的进水点 inlet")

  public String getInlet() {
    return inlet;
  }


  public void setInlet(String inlet) {
    this.inlet = inlet;
  }


  public RealTimeOutput inletName(String inletName) {
    
    this.inletName = inletName;
    return this;
  }

   /**
   * Get inletName
   * @return inletName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInletName() {
    return inletName;
  }


  public void setInletName(String inletName) {
    this.inletName = inletName;
  }


  public RealTimeOutput datas(List<RealTimeData> datas) {
    
    this.datas = datas;
    return this;
  }

  public RealTimeOutput addDatasItem(RealTimeData datasItem) {
    if (this.datas == null) {
      this.datas = new ArrayList<RealTimeData>();
    }
    this.datas.add(datasItem);
    return this;
  }

   /**
   * 具体数据 detailed data
   * @return datas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "具体数据 detailed data")

  public List<RealTimeData> getDatas() {
    return datas;
  }


  public void setDatas(List<RealTimeData> datas) {
    this.datas = datas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealTimeOutput realTimeOutput = (RealTimeOutput) o;
    return Objects.equals(this.location, realTimeOutput.location) &&
        Objects.equals(this.inlet, realTimeOutput.inlet) &&
        Objects.equals(this.inletName, realTimeOutput.inletName) &&
        Objects.equals(this.datas, realTimeOutput.datas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, inlet, inletName, datas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealTimeOutput {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    inlet: ").append(toIndentedString(inlet)).append("\n");
    sb.append("    inletName: ").append(toIndentedString(inletName)).append("\n");
    sb.append("    datas: ").append(toIndentedString(datas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

