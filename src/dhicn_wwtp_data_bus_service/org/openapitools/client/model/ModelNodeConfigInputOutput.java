/*
 * 污水业务中台领域服务
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ModelNodeConfigInputOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-09T14:11:26.479568400+08:00[Asia/Shanghai]")
public class ModelNodeConfigInputOutput {
  public static final String SERIALIZED_NAME_NODE_CODE = "nodeCode";
  @SerializedName(SERIALIZED_NAME_NODE_CODE)
  private String nodeCode;

  public static final String SERIALIZED_NAME_NODE_NAME = "nodeName";
  @SerializedName(SERIALIZED_NAME_NODE_NAME)
  private String nodeName;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public static final String SERIALIZED_NAME_DATA_TYPE = "dataType";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private String dataType;


  public ModelNodeConfigInputOutput nodeCode(String nodeCode) {
    
    this.nodeCode = nodeCode;
    return this;
  }

   /**
   * Get nodeCode
   * @return nodeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNodeCode() {
    return nodeCode;
  }


  public void setNodeCode(String nodeCode) {
    this.nodeCode = nodeCode;
  }


  public ModelNodeConfigInputOutput nodeName(String nodeName) {
    
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNodeName() {
    return nodeName;
  }


  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }


  public ModelNodeConfigInputOutput unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    this.unit = unit;
  }


  public ModelNodeConfigInputOutput dataType(String dataType) {
    
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataType() {
    return dataType;
  }


  public void setDataType(String dataType) {
    this.dataType = dataType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelNodeConfigInputOutput modelNodeConfigInputOutput = (ModelNodeConfigInputOutput) o;
    return Objects.equals(this.nodeCode, modelNodeConfigInputOutput.nodeCode) &&
        Objects.equals(this.nodeName, modelNodeConfigInputOutput.nodeName) &&
        Objects.equals(this.unit, modelNodeConfigInputOutput.unit) &&
        Objects.equals(this.dataType, modelNodeConfigInputOutput.dataType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeCode, nodeName, unit, dataType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelNodeConfigInputOutput {\n");
    sb.append("    nodeCode: ").append(toIndentedString(nodeCode)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

